# -*- coding: utf-8 -*-
"""
작성일: 2020-08-274 6
==============================================================================
문제 위치: 교재 201p
==============================================================================
소요 시간: 42분
"""

n, m = map(int, input().split())
rice_cake = list(map(int, input().split()))

start = 0
end = max(rice_cake)

result = 0
while(start <= end):
    cutted = 0
    blade = (start + end) // 2
    
    for item in rice_cake:
        temp = item - blade
        if temp > 0:
            cutted += temp
    
    if cutted < m:
        end = blade - 1
    else:
        start = blade + 1
        result = blade

print(result)

"""
접근법: 
잘린 떡의 크기가 최소한 m은 되면서 가장 적게 주는 절단기의 높이를 구해야 한다.
1. 이진 탐색에서 mid를 절단기의 높이라고 생각했다.
2. 탐색 1회마다 떡을 잘라 m과 크기를 비교한다.
3. m보다 작으면 더 잘라야 하므로 절단기를 더 낮춘다.
4. m보다 크거가 같으면 일단 현재 위치를 기록하고 절단기를 더 높인다.
5. 반복문이 종료되면 기록된 절단기의 위치를 출력한다.
==============================================================================
개선점: 
처음에 이진 탐색으로 풀수 있는 방법을 한참동안 생각해내지 못했다.
처음에는 그냥 무식하게 반복문을 돌려 절단기 높이를 1씩 높여가며 크기비교를 하려 했다.
해결은 가능하지만 너무 비효율적인 방법이라 변경했다.

이진 탐색을 특정 요소 찾기가 아니라 적절한 위치 찾기에도 사용할 수 있다는 것을 알았다.
"""