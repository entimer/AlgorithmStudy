"""
작성일: 2020-08-30
==============================================================================
문제 위치: 교재 226p
==============================================================================
소요 시간: 14분
"""

n, m = map(int, input().split())
array = []
for i in range(n):
    array.append(int(input()))

d = [100_000] * (m + 1)

for money in array:
    for i in range(2, m + 1):
        if i > money:
            d[i] = d[i - money] + 1
        if i % money == 0:
            d[i] = min(d[i], i // money)

if d[m] > 10000:
    print(-1)
else:
    print(d[m])


"""
접근법: 먼저 각 금액별 필요 화폐량을 저장할 d 리스트를 범위를 넘는 큰 수 (10만)으로 지정한다.
그 후 화폐 종류별, 각 금액별로 루프를 돌린다.
현재 금액의 필요 화폐량은 현재금액-화폐액수의 필요 화폐량보다 1 많다.
단, 현재 금액이 필요 화폐량으로 나누어 떨어지는 경우 그 몫이 필요 화폐량이다.
==============================================================================
개선점: 개선할 수 있는 부분
"""