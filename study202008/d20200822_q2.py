"""
작성일: 2020-00-00
==============================================================================
문제 위치: 교재 115p
==============================================================================
소요 시간: 12분
"""

pos_dict = {'a': 1, 'b': 2, 'c': 3, 'd': 4, 'e': 5, 'f': 6, 'g': 7, 'h': 8}
move_types = [(1, 2), (1, -2), (-1, 2), (-1, -2), (2, 1), (2, -1), (-2, 1), (-2, -1)]

pos = input()
pos_x = pos_dict[pos[0]]
pos_y = int(pos[1])

result = 0

for move in move_types:
    new_x = pos_x + move[0]
    new_y = pos_y + move[1]

    if (0 < new_x <= 8) and (0 < new_y <= 8):
        result += 1

print(result)

"""
접근법: 나이트가 이동할 수 있는 경우는 최대 8가지이다. 계산의 용이함을 위해 딕셔너리 선언.
또한 x좌표의 경우 알파벳으로 표현한다. 이 경우도 숫자로의 쉬운 변환을 위해 딕셔너리 선언.
입력을 받은 후 x, y좌표를 뽑아내고 나이트가 이동할수 있는 경우에 따라 루프를 돌린다.
각 경우가 체스판을 벗어나지 않는지 체크하고 유효한 경우라면 result를 1 올린다.
==============================================================================
개선점: 
- 좌표계에 a~h까지밖에 없어서 딕셔너리를 사용했지만 훨씬 많아지는 경우 이렇게 처리하기 어렵다.
이 경우 ascii code를 받아서 계산하거나 하는 등의 처리가 좋아 보인다.
==============================================================================
코멘트: 스터디 조원들의 코멘트
"""