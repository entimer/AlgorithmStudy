"""
작성일: 2020-08-29
==============================================================================
문제 위치: 교재 220p
소요 시간: 20분
"""

n = int(input())
storage = list(map(int, input().split()))

d = [0] * (n + 1)
d[0] = 0
d[1] = storage[0]
d[2] = max(storage[0], storage[1])

for i in range(3, n + 1):
    temp = d[i - 2] + storage[i - 1]
    d[i] = max(d[i - 1], temp)

print(d[n])

"""
접근법: 
창고가 1개일 때 부터 하나하나 생각해보니 규칙이 나왔다.
1. 1개의 창고가 있는 경우 그냥 그 창고를 털면 최대값이다.
2. 2개의 창고가 있는 경우 둘 중에 큰 것을 털면 최대값이다.
3. 3개의 창고가 있는 경우 창고 0, 2의 합과 창고 1 중에 큰 것을 털면 최대값이다.
4. 4개의 창고가 있는 경우 2번 방법에 한개를 더 턴것과 3번 방법중 큰 것이 최대값이다.
5. n개의 창고가 있는 경우 n-2번 방법에 한개를 더 턴것과 n-1번 방법중 큰 것이 최대값이다.
= max(d[i - 1], d[i - 2] + storage[i - 1])
==============================================================================
개선점: 개선할 수 있는 부분
"""